name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      KUBECONFIG: ${{ secrets.KUBECONFIG }}
      DOCKERHUB_REGISTRY: sindhusambasivam/hello_world

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14' # Use the desired Node.js version

      - name: Install Dependencies
        run: npm install


      - name: Set up SonarQube Scanner
        run: |
              curl -o sonar-scanner.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-windows.zip
                unzip sonar-scanner.zip
                mv sonar-scanner-5.0.1.3006-windows sonar-scanner
                echo "export PATH=\$PATH:$(pwd)/sonar-scanner/bin" >> $GITHUB_ENV
                sonar-scanner -v
  
      - name: Test using Jest
        run: npm test

      - name: Build Docker image
        run: |
          docker build -t $DOCKERHUB_REGISTRY:${{ github.run_number }} .
        env:
          DOCKERHUB_REGISTRY: ${{ secrets.DOCKERHUB_REGISTRY }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}

      - name: Push Docker image
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push $DOCKERHUB_REGISTRY:${GITHUB_RUN_NUMBER}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          DOCKERHUB_REGISTRY: ${{ secrets.DOCKERHUB_REGISTRY }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f node-web-app-deployment.yaml
          kubectl apply -f node-web-app-service.yaml

      - name: Run Selenium Test
        run: |
          node helloworld.js &
          # Wait for server to start
          sleep 60
          # Install Selenium dependencies
          npm install selenium-webdriver chromedriver
          # Run Selenium test
          node selenium-test.js
          # Kill the Express.js server process
          pkill -f "node helloworld.js"

      - name: Logout from Docker
        run: docker logout
