name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    env:
      KUBECONFIG: ${{ secrets.KUBECONFIG }}
      DOCKERHUB_REGISTRY: sindhusambasivam/hello_world
      DOCKERHUB_CREDENTIALS_ID: dockerhub

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: SonarQube Analysis
        run: |
          curl -o sonar-scanner.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-windows.zip
          powershell -Command Expand-Archive -Path sonar-scanner.zip -DestinationPath .
          $scannerBinDir = "C:\\Users\\sindhu\\sonar-scanner-5.0.1.3006-windows\\bin\\sonar-scanner.bat"
          & $scannerBinDir
        shell: cmd

      - name: Test using Jest
        run: npm test

      - name: Run JMeter Test
        run: |
          if "${{ runner.os }}" == "Windows" ; then
            C:\\Users\\sindhu\\apache-jmeter-5.6.2\\bin\\jmeter.bat -n -t "Test Plans\\PetStore-End-to-End-Flow.jmx" -p "Test Plans\\data\\PetStore_LoadTest.properties" -JTOTAL_THREADS=2 -JTEST_DURATION=60 -l MyRun1.jtl
          else
            C:\\Users\\sindhu\\apache-jmeter-5.6.2\\bin\\jmeter.sh -n -t "Test Plans/PetStore-End-to-End-Flow.jmx" -p "Test Plans/data/PetStore_LoadTest.properties" -JTOTAL_THREADS=2 -JTEST_DURATION=60 -l MyRun1.jtl
          fi
        shell: cmd

      - name: Build Docker Image
        run: |
          docker build -t $DOCKERHUB_REGISTRY:${GITHUB_RUN_NUMBER} .
        shell: cmd

      - name: Push Docker image
        run: |
          echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push $DOCKERHUB_REGISTRY:${GITHUB_RUN_NUMBER}
        shell: cmd
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f node-web-app-deployment.yaml
          kubectl apply -f node-web-app-service.yaml
        shell: cmd

      - name: Run Selenium Test
        run: |
          start /b cmd /c node helloworld.js
          # Wait for server to start
          timeout /t 60
          # Install Selenium dependencies
          npm install selenium-webdriver chromedriver
          # Run Selenium test
          node selenium-test.js
          # Kill the Express.js server process
          taskkill /f /im "node.exe"
        shell: cmd

      - name: Logout from Docker
        run: docker logout
